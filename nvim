--todo
-- difforg
vim.o.undofile = true
vim.o.mouse = i -- only insert
vim.o.scrolloff = 2
vim.o.visualbell = true
vim.wo.number = true
vim.wo.relativenumber = true

vim.wo.conceallevel=2
vim.wo.concealcursor = 'niv'



vim.o.ignorecase = true
vim.o.smartcase = true
vim.o.hlsearch = false

vim.g.mapleader=","

function map(mode, shortcut, command)
	vim.api.nvim_set_keymap(mode, shortcut, command, { noremap = true, silent = true })
end

-- motion over wraps
map('n', 'j', 'gj')
map('n', 'k', 'gk')

-- edit/reload vimrc
map('n', '<leader>ev', ':e '..vim.env.MYVIMRC..'<CR>')
map('n', '<leader>sv', ':so '..vim.env.MYVIMRC..'<CR>')

-- leader directions splits that direction
map('n', 'k', 'gk')
map('n', '<leader>l', ':vsp<CR><C-w>l')
map('n', '<leader>h', ':vsp<CR>')
map('n', '<leader>j', ':sp<CR><C-w>j')
map('n', '<leader>k', ':sp<CR>')

-- map ctrl>movement to C-w movement
map('n', '<C-h>', '<C-w>h')
map('n', '<C-j>', '<C-w>j')
map('n', '<C-k>', '<C-w>k')
map('n', '<C-l>', '<C-w>l')

-- leader directions splits that direction
map('n', '<leader>l', ':vsp<CR><C-w>l')
map('n', '<leader>h', ':vsp<CR>')
map('n', '<leader>j', ':sp<CR><C-w>j')
map('n', '<leader>k', ':sp<CR>')

-- underline current line
map('n', '<leader>u', 'yyp:s/./-/g<CR>')

-- save
map('n', '<leader>w', ':w<CR>')
-- add a newline
map('n', '<leader>o', 'mzo<Esc>`z')
map('n', '<leader>O', 'mzO<Esc>`z')

-- escape terminal
map('t', '<leader>x', '<C-\\><C-n>')

-- tab navigation
map('n', '<leader>f', 'gt')
map('n', '<leader>d', 'gT')

-- Move line keys
map('n', '<A-j>', ':m+<CR>==')
map('n', '<A-k>', ':m-2<CR>==')
map('n', '<A-h>', '<<')
map('n', '<A-l>', '>>')
map('i', '<A-j>', '<Esc>:m+<CR>==gi')
map('i', '<A-k>', '<Esc>:m-2<CR>==gi')
map('i', '<A-h>', '<Esc><<`]a')
map('i', '<A-l>', '<Esc>>>`]a')
map('v', '<A-j>', ':m\'>+<CR>gv=gv')
map('v', '<A-k>', ':m-2<CR>gv=gv')
map('v', '<A-h>', '<gv')
map('v', '<A-l>', '>gv')

-- Escape after mashing jkjk
map('i', 'jk', '<esc>')
map('i', 'kj', '<esc>')

-- Filetype settings
vim.cmd('autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab')
vim.cmd('autocmd FileType ansible setlocal ts=2 sts=2 sw=2 expandtab')
vim.cmd('autocmd FileType python setlocal ts=2 sw=4 sts=4 expandtab')
vim.cmd('autocmd FileType javascript setlocal ts=4 sw=4 sts=4 expandtab')

-- folding
vim.wo.foldmethod = indent
vim.g.foldlevelstart=99
map('n', '<space>', 'za')

-- vim plug
-- install: https://github.com/junegunn/vim-plug?tab=readme-ov-file
local Plug = vim.fn['plug#']
vim.call('plug#begin')

Plug('folke/tokyonight.nvim') -- color scheme
Plug('gioele/vim-autoswap') -- deal with swap files
Plug('machakann/vim-sandwich') -- surround
Plug('tpope/vim-abolish') -- find/replacer
Plug('tpope/vim-repeat')
Plug('vim-airline/vim-airline')
Plug('maksimr/vim-jsbeautify')
Plug('mattn/emmet-vim') -- HTML expansion
-- below are plugs with config
Plug('junegunn/vim-easy-align')
Plug('Chiel92/vim-autoformat')

vim.call('plug#end')

-- easy-align
-- Start interactive EasyAlign in visual mode (e.g. vipga)
vim.api.nvim_set_keymap('x', 'ga', '<Plug>(EasyAlign)', { silent = true })
-- Start interactive EasyAlign for a motion/text object (e.g. gaip)
vim.api.nvim_set_keymap('n', 'ga', '<Plug>(EasyAlign)', { silent = true })

-- autoformat
map('n', '<F3>', ':Autoformat<CR>')

-- end plugins
vim.cmd('silent! colorscheme tokyonight-night')

